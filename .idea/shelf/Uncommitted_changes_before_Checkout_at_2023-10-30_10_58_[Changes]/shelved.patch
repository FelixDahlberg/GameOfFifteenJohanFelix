Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class Main extends JFrame implements ActionListener {\r\n    public static void main(String[] args) {\r\n        new Main();\r\n    }\r\n\r\n    northPanel northPanel = new northPanel();\r\n    centerPanel centerPanel = new centerPanel();\r\n    southPanel southPanel = new southPanel();\r\n\r\n\r\n    Main() {\r\n        setTitle(\"Game Of Fifteen\");\r\n        setLayout(new BorderLayout());\r\n        add(northPanel, BorderLayout.NORTH);\r\n        add(centerPanel, BorderLayout.CENTER);\r\n        add(southPanel, BorderLayout.SOUTH);\r\n\r\n        northPanel.newGameButton.addActionListener(this);\r\n        northPanel.changeColorOnGameButton.addActionListener(this);\r\n        northPanel.changeColorOnNumbersButton.addActionListener(this);\r\n\r\n        southPanel.timer.start();\r\n\r\n        centerPanel.dimensionArray[0][0].addActionListener(this);\r\n        centerPanel.dimensionArray[0][1].addActionListener(this);\r\n        centerPanel.dimensionArray[0][2].addActionListener(this);\r\n        centerPanel.dimensionArray[0][3].addActionListener(this);\r\n        centerPanel.dimensionArray[1][0].addActionListener(this);\r\n        centerPanel.dimensionArray[1][1].addActionListener(this);\r\n        centerPanel.dimensionArray[1][2].addActionListener(this);\r\n        centerPanel.dimensionArray[1][3].addActionListener(this);\r\n        centerPanel.dimensionArray[2][0].addActionListener(this);\r\n        centerPanel.dimensionArray[2][1].addActionListener(this);\r\n        centerPanel.dimensionArray[2][2].addActionListener(this);\r\n        centerPanel.dimensionArray[2][3].addActionListener(this);\r\n        centerPanel.dimensionArray[3][0].addActionListener(this);\r\n        centerPanel.dimensionArray[3][1].addActionListener(this);\r\n        centerPanel.dimensionArray[3][2].addActionListener(this);\r\n        centerPanel.dimensionArray[3][3].addActionListener(this);\r\n\r\n\r\n        pack();\r\n        setLocationRelativeTo(null);\r\n        setResizable(false);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n        setVisible(true);\r\n    }\r\n\r\n    public void updateMoveCounter() {\r\n        southPanel.moveCounter++;\r\n        southPanel.moveCounterLabel.setText(\"Antal drag: \" + southPanel.moveCounter);\r\n    }\r\n\r\n    public ArrayList<JButton> shuffleGame(ArrayList<JButton> buttonlist) {\r\n        Collections.shuffle(buttonlist);\r\n        return buttonlist;\r\n    }\r\n\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        if (isMoveOk(buttonPosition(e.getActionCommand(), centerPanel.dimensionArray))){\r\n            int[] clickedButtonPosition = convertStringToIntArray(buttonPosition(e.getActionCommand(), centerPanel.dimensionArray));\r\n            move1(clickedButtonPosition[0],clickedButtonPosition[1]);\r\n            updateMoveCounter();\r\n            if (checkIfWin.checkIfWinner2(centerPanel.dimensionArray)){\r\n                System.out.println(\"du vann\");\r\n            }\r\n        }\r\n        if (e.getSource() == northPanel.newGameButton) {\r\n            shuffleGame(centerPanel.buttonList);\r\n            \r\n        }\r\n        if (e.getSource() == northPanel.changeColorOnNumbersButton) {\r\n            Color colorSelectorNumbers = JColorChooser.showDialog(null, \"Välj en färg på spelbrickorna\", Color.WHITE);\r\n            if (colorSelectorNumbers != null) {\r\n                Component[] comps = centerPanel.getComponents();\r\n                for (Component comp : comps) {\r\n                    if (comp instanceof JButton b) {\r\n                        b.setBackground(colorSelectorNumbers);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (e.getSource() == northPanel.changeColorOnGameButton) {\r\n            Color colorSelectorGame = JColorChooser.showDialog(null, \"Välj en färg på spelplanen\", Color.BLACK);\r\n            if (colorSelectorGame != null) {\r\n                centerPanel.setBackground(colorSelectorGame);\r\n                northPanel.setBackground(colorSelectorGame);\r\n            }\r\n        }\r\n    }\r\n    public String buttonPosition(String buttonNumber, JButton[][] dimensionArray) {\r\n        String searchString = buttonNumber;\r\n\r\n        int rowPosition = -1;\r\n        int colPosition = -1;\r\n\r\n        for (int i = 0; i < dimensionArray.length; i++) {\r\n            for (int j = 0; j < dimensionArray[i].length; j++) {\r\n                if (dimensionArray[i][j].getText().equals(searchString)) {\r\n                    rowPosition = i;\r\n                    colPosition = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (rowPosition != -1) {\r\n                break;\r\n            }\r\n        }\r\n        return rowPosition + \":\"+ colPosition;\r\n    }\r\n    public boolean isMoveOk(String clickedButtonPosition){\r\n        boolean returnboolean = false;\r\n\r\n        int[] clickedbuttonPositionParts = convertStringToIntArray(clickedButtonPosition);\r\n        int[] blankButtonPosition = convertStringToIntArray(buttonPosition(\" \", centerPanel.dimensionArray));\r\n        if (clickedbuttonPositionParts[0] == (blankButtonPosition[0]) &&\r\n                (blankButtonPosition[1] == clickedbuttonPositionParts[1] + 1 ||\r\n                blankButtonPosition[1] == clickedbuttonPositionParts[1] - 1 )) {\r\n            returnboolean = true;\r\n        } else if (clickedbuttonPositionParts[1] == (blankButtonPosition[1]) &&\r\n                (blankButtonPosition[0] == clickedbuttonPositionParts[0] + 1 ||\r\n                blankButtonPosition[0] == clickedbuttonPositionParts[0] - 1 )) {\r\n            returnboolean = true;\r\n        }\r\n        return returnboolean;\r\n    }\r\n    public static int[] convertStringToIntArray(String input) {\r\n        String[] parts = input.split(\":\");\r\n        int[] intArray = new int[parts.length];\r\n\r\n        for (int i = 0; i < parts.length; i++) {\r\n            intArray[i] = Integer.parseInt(parts[i]);\r\n        }\r\n\r\n        return intArray;\r\n    }\r\n    public void move1(int a, int b){\r\n        int[] blankButtonPosition = convertStringToIntArray(buttonPosition(\" \", centerPanel.dimensionArray));\r\n        centerPanel.dimensionArray[blankButtonPosition[0]][blankButtonPosition[1]].setText(centerPanel.dimensionArray[a][b].getText());\r\n        centerPanel.dimensionArray[a][b].setText(\" \");\r\n        centerPanel.dimensionArray[a][b].setVisible(false);\r\n        centerPanel.dimensionArray[blankButtonPosition[0]][blankButtonPosition[1]].setVisible(true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 670b70dccdf66f8c5ca759184a3328c10d7bbc96)
+++ b/src/Main.java	(date 1698659885528)
@@ -58,25 +58,35 @@
         southPanel.moveCounterLabel.setText("Antal drag: " + southPanel.moveCounter);
     }
 
-    public ArrayList<JButton> shuffleGame(ArrayList<JButton> buttonlist) {
-        Collections.shuffle(buttonlist);
-        return buttonlist;
+    public void shuffleGame() {
+        int gridSize = centerPanel.dimensionArray.length;
+        for (int i = 0; i < gridSize; i++) {
+            for (int j = 0; j < gridSize; j++) {
+                centerPanel.buttonList.add(centerPanel.dimensionArray[i][j]);
+            }
+        }
+        Collections.shuffle(centerPanel.buttonList);
+        for (int i = 0; i < gridSize; i++) {
+            for (int j = 0; j < gridSize; j++) {
+                centerPanel.dimensionArray[i][j].add(centerPanel.buttonList.get());
+            }
+        }
     }
 
     @Override
     public void actionPerformed(ActionEvent e) {
-        if (isMoveOk(buttonPosition(e.getActionCommand(), centerPanel.dimensionArray))){
+        if (isMoveOk(buttonPosition(e.getActionCommand(), centerPanel.dimensionArray))) {
             int[] clickedButtonPosition = convertStringToIntArray(buttonPosition(e.getActionCommand(), centerPanel.dimensionArray));
-            move1(clickedButtonPosition[0],clickedButtonPosition[1]);
+            move1(clickedButtonPosition[0], clickedButtonPosition[1]);
             updateMoveCounter();
-            if (checkIfWin.checkIfWinner2(centerPanel.dimensionArray)){
+            if (checkIfWin.checkIfWinner2(centerPanel.dimensionArray)) {
                 System.out.println("du vann");
             }
         }
         if (e.getSource() == northPanel.newGameButton) {
-            shuffleGame(centerPanel.buttonList);
-            
+            shuffleGame();
         }
+        
         if (e.getSource() == northPanel.changeColorOnNumbersButton) {
             Color colorSelectorNumbers = JColorChooser.showDialog(null, "Välj en färg på spelbrickorna", Color.WHITE);
             if (colorSelectorNumbers != null) {
@@ -96,6 +106,7 @@
             }
         }
     }
+
     public String buttonPosition(String buttonNumber, JButton[][] dimensionArray) {
         String searchString = buttonNumber;
 
@@ -114,24 +125,26 @@
                 break;
             }
         }
-        return rowPosition + ":"+ colPosition;
+        return rowPosition + ":" + colPosition;
     }
-    public boolean isMoveOk(String clickedButtonPosition){
+
+    public boolean isMoveOk(String clickedButtonPosition) {
         boolean returnboolean = false;
 
         int[] clickedbuttonPositionParts = convertStringToIntArray(clickedButtonPosition);
         int[] blankButtonPosition = convertStringToIntArray(buttonPosition(" ", centerPanel.dimensionArray));
         if (clickedbuttonPositionParts[0] == (blankButtonPosition[0]) &&
                 (blankButtonPosition[1] == clickedbuttonPositionParts[1] + 1 ||
-                blankButtonPosition[1] == clickedbuttonPositionParts[1] - 1 )) {
+                        blankButtonPosition[1] == clickedbuttonPositionParts[1] - 1)) {
             returnboolean = true;
         } else if (clickedbuttonPositionParts[1] == (blankButtonPosition[1]) &&
                 (blankButtonPosition[0] == clickedbuttonPositionParts[0] + 1 ||
-                blankButtonPosition[0] == clickedbuttonPositionParts[0] - 1 )) {
+                        blankButtonPosition[0] == clickedbuttonPositionParts[0] - 1)) {
             returnboolean = true;
         }
         return returnboolean;
     }
+
     public static int[] convertStringToIntArray(String input) {
         String[] parts = input.split(":");
         int[] intArray = new int[parts.length];
@@ -142,7 +155,8 @@
 
         return intArray;
     }
-    public void move1(int a, int b){
+
+    public void move1(int a, int b) {
         int[] blankButtonPosition = convertStringToIntArray(buttonPosition(" ", centerPanel.dimensionArray));
         centerPanel.dimensionArray[blankButtonPosition[0]][blankButtonPosition[1]].setText(centerPanel.dimensionArray[a][b].getText());
         centerPanel.dimensionArray[a][b].setText(" ");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5dd2a778-8f10-4e56-81bf-8ee08aeb3442\" name=\"Changes\" comment=\"first puch\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"Johans-branch\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"FelixDevelopment\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XTWRTLnCEwBDd8Tpxf5vUitMmo\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;development&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/felix/IdeaProjects/GameOfFifteenJohanFelix/src&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\felix\\IdeaProjects\\GameOfFifteenJohanFelix\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"GameOfFifteenJohanFelix\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5dd2a778-8f10-4e56-81bf-8ee08aeb3442\" name=\"Changes\" comment=\"\" />\r\n      <created>1698653543568</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698653543568</updated>\r\n      <workItem from=\"1698653544719\" duration=\"2272000\" />\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"first puch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698653901249</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1698653901249</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first puch\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first puch\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/Main.java</url>\r\n          <line>66</line>\r\n          <properties class=\"Main\" method=\"actionPerformed\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"11\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 670b70dccdf66f8c5ca759184a3328c10d7bbc96)
+++ b/.idea/workspace.xml	(date 1698659851852)
@@ -5,8 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="5dd2a778-8f10-4e56-81bf-8ee08aeb3442" name="Changes" comment="first puch">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
     </list>
+    <list id="66dca3bb-2c96-45b4-a395-5d335f3b7e11" name="Changes by felix" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -32,20 +34,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;development&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/felix/IdeaProjects/GameOfFifteenJohanFelix/src&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "git-widget-placeholder": "Johans-branch",
+    "last_opened_file_path": "C:/Users/felix/IdeaProjects/GameOfFifteenJohanFelix/src",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\felix\IdeaProjects\GameOfFifteenJohanFelix\src" />
@@ -97,7 +99,7 @@
       <breakpoints>
         <line-breakpoint enabled="true" type="java-method">
           <url>file://$PROJECT_DIR$/src/Main.java</url>
-          <line>66</line>
+          <line>76</line>
           <properties class="Main" method="actionPerformed">
             <option name="EMULATED" value="true" />
             <option name="WATCH_EXIT" value="false" />
